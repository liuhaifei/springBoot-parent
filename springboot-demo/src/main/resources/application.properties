spring.application.name=springBootDemo
server.port=8080

#MySQL
spring.datasource.username=root
#\u5BC6\u7801
spring.datasource.password=123456
#url
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/user_0?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
#\u6570\u636E\u6E90
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#\u9A71\u52A8
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#region hikari \u6570\u636E\u6E90\u914D\u7F6E
#\u8FDE\u63A5\u6709\u6548\u6027\u9A8C\u8BC1 SQL
spring.datasource.hikari.connection-test-query=SELECT 1
#\u8FDE\u63A5\u521D\u59CB\u5316 SQL
spring.datasource.hikari.connection-init-sql=SELECT 1
#\u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\u91CF \u7F3A\u770110
spring.datasource.hikari.maximum-pool-size=200
#\u8FDE\u63A5\u6C60\u6700\u5C0F\u8FDE\u63A5\u6570\u91CF \u7F3A\u7701\u7B49\u4E8E maximum-pool-size
spring.datasource.hikari.minimum-idle=10



#Spring Data JPA
spring.jpa.database=MYSQL
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update

#mybatis
mybatis.mapper-locations=classpath:mapper/*.xml
#实体扫描，多个package用逗号或者分号分隔
#mybatis-plus.typeAliasesPackage=com.hjc.sharding.*.entity
#主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
mybatis-plus.global-config.id-type=2
#字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
mybatis-plus.global-config.field-strategy=2
#驼峰下划线转换
mybatis-plus.global-config.db-column-underline=true
#刷新mapper 调试神器
mybatis-plus.global-config.refresh-mapper=true
#数据库大写下划线转换
#capital-mode: true
#序列接口实现类配置
#key-generator: com.baomidou.springboot.xxx
#逻辑删除配置（下面3个配置）
mybatis-plus.global-config.logic-delete-value=0
mybatis-plus.global-config.logic-not-delete-value=1
#自定义SQL注入器
#sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
#自定义填充策略接口实现
#meta-object-handler: com.baomidou.springboot.xxx
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.cache-enabled=false


#send mail
#163
#spring.mail.host=smtp.163.com
#spring.mail.username=15901995342@163.com
#spring.mail.password=a1234567@

#qq mail
spring.mail.host=smtp.qq.com
spring.mail.username=1291742117@qq.com
spring.mail.password=hmhzstuqdkkcgbci
spring.mail.properties.mail.smtp.auth=true 
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.stattls.required=true

mail.fromMail.addr=1291742117@qq.com


# rabbitMq
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/

#支持发布确认
spring.rabbitmq.publisher-confirms=true
#支持发布返回
spring.rabbitmq.publisher-returns=true

#生产者与rabbitmq服务连接丢失时重试机制，默认关闭
#spring.rabbitmq.template.retry.enabled=true
#spring.rabbitmq.publisher-confirms=true



#redis
# Redis数据库索引（默认为0）
#spring.redis.database=0
# Redis服务器地址
#spring.redis.host=localhost
## Redis服务器连接端口
#spring.redis.port=6379
## Redis服务器连接密码（默认为空）
##spring.redis.password=123456
## 普通集群，不使用则不用开启 在群集中执行命令时要遵循的最大重定向数目
#spring.redis.cluster.max-redirects=4
## （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导
#spring.redis.cluster.nodes[0]=127.0.0.1:6379
#spring.redis.cluster.nodes[1]=127.0.0.1:6380
#spring.redis.cluster.nodes[2]=127.0.0.1:6381
#spring.redis.cluster.nodes[3]=127.0.0.1:6382
#spring.redis.cluster.nodes[4]=127.0.0.1:6383
#spring.redis.cluster.nodes[5]=127.0.0.1:6384
#spring.redis.cluster.nodes[6]=127.0.0.1:6385
#spring.redis.cluster.nodes[7]=127.0.0.1:6386
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.jedis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.jedis.pool.max-wait=-1
## 连接池中的最大空闲连接
#spring.redis.jedis.pool.max-idle=8
## 连接池中的最小空闲连接
#spring.redis.jedis.pool.min-idle=0
## 连接超时时间（毫秒）
#spring.redis.timeout=10000




















